<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>rest-producer</artifactId>
	<packaging>jar</packaging>

	<name>rest-producer</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>

		<spring-boot.version>2.1.6.RELEASE</spring-boot.version>
	</properties>

	<parent>
		<groupId>org.adidas.code.challange</groupId>
		<artifactId>eureka-dijkstra</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../eureka-dijkstra/pom.xml</relativePath>
	</parent>

	<dependencies>

		<!-- Common DTO's -->
		<dependency>
			<groupId>org.adidas.code.challange</groupId>
			<artifactId>rest-dto</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- starter-actuator -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- spring security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- spring security test -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- spring boot data jpa -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- hibernate-jpa -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
		</dependency>

		<!-- H2 database -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<!-- swagger rest doc -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
		
			<!-- create jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- jacoco test coverage report 
			/target/site/jacoco/index.html
			-->
		    <plugin>
		      	<groupId>org.jacoco</groupId>
		      	<artifactId>jacoco-maven-plugin</artifactId>
		      	<version>0.8.2</version>
		      	<configuration>
		        	<append>true</append>
		     	 </configuration>
		      	<executions>
		        	<execution>
		          		<goals>
		           			<goal>prepare-agent</goal>
		          		</goals>
		        	</execution>
		        <execution>
		          	<id>post-unit-test</id>
		          	<phase>test</phase>
		          	<goals>
		            	<goal>report</goal>
		          	</goals>
		        </execution>
		      </executions>
		    </plugin>
			
		</plugins>
	</build>

</project>
